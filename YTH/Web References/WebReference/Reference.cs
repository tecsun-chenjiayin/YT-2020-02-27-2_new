//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace YTH.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CardServiceSoapBinding", Namespace="http://server.wei.com")]
    public partial class CardServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAZ03OperationCompleted;
        
        private System.Threading.SendOrPostCallback getAZ03AOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAZ03BHOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAC01OperationCompleted;
        
        private System.Threading.SendOrPostCallback readCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkTACOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkTAC1OperationCompleted;
        
        private System.Threading.SendOrPostCallback setCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLossOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLKSJOperationCompleted;
        
        private System.Threading.SendOrPostCallback getZDZZOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCOPYOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDSYKHOperationCompleted;
        
        private System.Threading.SendOrPostCallback upPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback allDsjkOperationCompleted;
        
        private System.Threading.SendOrPostCallback onSendMessagOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSockInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback setStartOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CardServiceService() {
            this.Url = global::YTH.Properties.Settings.Default.YTH_WebReference_CardServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCardCompletedEventHandler getCardCompleted;
        
        /// <remarks/>
        public event getBankCompletedEventHandler getBankCompleted;
        
        /// <remarks/>
        public event getBankSCompletedEventHandler getBankSCompleted;
        
        /// <remarks/>
        public event getAZ03CompletedEventHandler getAZ03Completed;
        
        /// <remarks/>
        public event getAZ03ACompletedEventHandler getAZ03ACompleted;
        
        /// <remarks/>
        public event getAZ03BHCompletedEventHandler getAZ03BHCompleted;
        
        /// <remarks/>
        public event getAC01CompletedEventHandler getAC01Completed;
        
        /// <remarks/>
        public event readCardCompletedEventHandler readCardCompleted;
        
        /// <remarks/>
        public event checkTACCompletedEventHandler checkTACCompleted;
        
        /// <remarks/>
        public event checkTAC1CompletedEventHandler checkTAC1Completed;
        
        /// <remarks/>
        public event setCardCompletedEventHandler setCardCompleted;
        
        /// <remarks/>
        public event setLossCompletedEventHandler setLossCompleted;
        
        /// <remarks/>
        public event getLKSJCompletedEventHandler getLKSJCompleted;
        
        /// <remarks/>
        public event getZDZZCompletedEventHandler getZDZZCompleted;
        
        /// <remarks/>
        public event setCOPYCompletedEventHandler setCOPYCompleted;
        
        /// <remarks/>
        public event setDSYKHCompletedEventHandler setDSYKHCompleted;
        
        /// <remarks/>
        public event upPictureCompletedEventHandler upPictureCompleted;
        
        /// <remarks/>
        public event allDsjkCompletedEventHandler allDsjkCompleted;
        
        /// <remarks/>
        public event onSendMessagCompletedEventHandler onSendMessagCompleted;
        
        /// <remarks/>
        public event getCardInfoCompletedEventHandler getCardInfoCompleted;
        
        /// <remarks/>
        public event getSockInfoCompletedEventHandler getSockInfoCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event insertCompletedEventHandler insertCompleted;
        
        /// <remarks/>
        public event getDataCompletedEventHandler getDataCompleted;
        
        /// <remarks/>
        public event setStartCompletedEventHandler setStartCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCardReturn")]
        public string getCard(string user, string pass, string aaz500, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("getCard", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCardAsync(string user, string pass, string aaz500, string aac002, string aac003, string aab301) {
            this.getCardAsync(user, pass, aaz500, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void getCardAsync(string user, string pass, string aaz500, string aac002, string aac003, string aab301, object userState) {
            if ((this.getCardOperationCompleted == null)) {
                this.getCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardOperationCompleted);
            }
            this.InvokeAsync("getCard", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        aac003,
                        aab301}, this.getCardOperationCompleted, userState);
        }
        
        private void OngetCardOperationCompleted(object arg) {
            if ((this.getCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardCompleted(this, new getCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getBankReturn")]
        public string getBank(string user, string pass, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("getBank", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBankAsync(string user, string pass, string aac002, string aac003, string aab301) {
            this.getBankAsync(user, pass, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void getBankAsync(string user, string pass, string aac002, string aac003, string aab301, object userState) {
            if ((this.getBankOperationCompleted == null)) {
                this.getBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankOperationCompleted);
            }
            this.InvokeAsync("getBank", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301}, this.getBankOperationCompleted, userState);
        }
        
        private void OngetBankOperationCompleted(object arg) {
            if ((this.getBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankCompleted(this, new getBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getBankSReturn")]
        public string getBankS(string user, string pass, string aac002, string aac003) {
            object[] results = this.Invoke("getBankS", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBankSAsync(string user, string pass, string aac002, string aac003) {
            this.getBankSAsync(user, pass, aac002, aac003, null);
        }
        
        /// <remarks/>
        public void getBankSAsync(string user, string pass, string aac002, string aac003, object userState) {
            if ((this.getBankSOperationCompleted == null)) {
                this.getBankSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankSOperationCompleted);
            }
            this.InvokeAsync("getBankS", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003}, this.getBankSOperationCompleted, userState);
        }
        
        private void OngetBankSOperationCompleted(object arg) {
            if ((this.getBankSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankSCompleted(this, new getBankSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAZ03Return")]
        public string getAZ03(string user, string pass, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("getAZ03", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAZ03Async(string user, string pass, string aac002, string aac003, string aab301) {
            this.getAZ03Async(user, pass, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void getAZ03Async(string user, string pass, string aac002, string aac003, string aab301, object userState) {
            if ((this.getAZ03OperationCompleted == null)) {
                this.getAZ03OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAZ03OperationCompleted);
            }
            this.InvokeAsync("getAZ03", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301}, this.getAZ03OperationCompleted, userState);
        }
        
        private void OngetAZ03OperationCompleted(object arg) {
            if ((this.getAZ03Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAZ03Completed(this, new getAZ03CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAZ03AReturn")]
        public string getAZ03A(string user, string pass, string aac002s, string aab301) {
            object[] results = this.Invoke("getAZ03A", new object[] {
                        user,
                        pass,
                        aac002s,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAZ03AAsync(string user, string pass, string aac002s, string aab301) {
            this.getAZ03AAsync(user, pass, aac002s, aab301, null);
        }
        
        /// <remarks/>
        public void getAZ03AAsync(string user, string pass, string aac002s, string aab301, object userState) {
            if ((this.getAZ03AOperationCompleted == null)) {
                this.getAZ03AOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAZ03AOperationCompleted);
            }
            this.InvokeAsync("getAZ03A", new object[] {
                        user,
                        pass,
                        aac002s,
                        aab301}, this.getAZ03AOperationCompleted, userState);
        }
        
        private void OngetAZ03AOperationCompleted(object arg) {
            if ((this.getAZ03ACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAZ03ACompleted(this, new getAZ03ACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAZ03BHReturn")]
        public string getAZ03BH(string user, string pass, string min, string max, string aab301) {
            object[] results = this.Invoke("getAZ03BH", new object[] {
                        user,
                        pass,
                        min,
                        max,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAZ03BHAsync(string user, string pass, string min, string max, string aab301) {
            this.getAZ03BHAsync(user, pass, min, max, aab301, null);
        }
        
        /// <remarks/>
        public void getAZ03BHAsync(string user, string pass, string min, string max, string aab301, object userState) {
            if ((this.getAZ03BHOperationCompleted == null)) {
                this.getAZ03BHOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAZ03BHOperationCompleted);
            }
            this.InvokeAsync("getAZ03BH", new object[] {
                        user,
                        pass,
                        min,
                        max,
                        aab301}, this.getAZ03BHOperationCompleted, userState);
        }
        
        private void OngetAZ03BHOperationCompleted(object arg) {
            if ((this.getAZ03BHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAZ03BHCompleted(this, new getAZ03BHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getAC01Return")]
        public string getAC01(string user, string pass, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("getAC01", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAC01Async(string user, string pass, string aac002, string aac003, string aab301) {
            this.getAC01Async(user, pass, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void getAC01Async(string user, string pass, string aac002, string aac003, string aab301, object userState) {
            if ((this.getAC01OperationCompleted == null)) {
                this.getAC01OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAC01OperationCompleted);
            }
            this.InvokeAsync("getAC01", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301}, this.getAC01OperationCompleted, userState);
        }
        
        private void OngetAC01OperationCompleted(object arg) {
            if ((this.getAC01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAC01Completed(this, new getAC01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("readCardReturn")]
        public string readCard(string user, string pass, string id, string aab301) {
            object[] results = this.Invoke("readCard", new object[] {
                        user,
                        pass,
                        id,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void readCardAsync(string user, string pass, string id, string aab301) {
            this.readCardAsync(user, pass, id, aab301, null);
        }
        
        /// <remarks/>
        public void readCardAsync(string user, string pass, string id, string aab301, object userState) {
            if ((this.readCardOperationCompleted == null)) {
                this.readCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadCardOperationCompleted);
            }
            this.InvokeAsync("readCard", new object[] {
                        user,
                        pass,
                        id,
                        aab301}, this.readCardOperationCompleted, userState);
        }
        
        private void OnreadCardOperationCompleted(object arg) {
            if ((this.readCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readCardCompleted(this, new readCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("checkTACReturn")]
        public string checkTAC(string user, string pass, string dodebit, string aab301a) {
            object[] results = this.Invoke("checkTAC", new object[] {
                        user,
                        pass,
                        dodebit,
                        aab301a});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkTACAsync(string user, string pass, string dodebit, string aab301a) {
            this.checkTACAsync(user, pass, dodebit, aab301a, null);
        }
        
        /// <remarks/>
        public void checkTACAsync(string user, string pass, string dodebit, string aab301a, object userState) {
            if ((this.checkTACOperationCompleted == null)) {
                this.checkTACOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckTACOperationCompleted);
            }
            this.InvokeAsync("checkTAC", new object[] {
                        user,
                        pass,
                        dodebit,
                        aab301a}, this.checkTACOperationCompleted, userState);
        }
        
        private void OncheckTACOperationCompleted(object arg) {
            if ((this.checkTACCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkTACCompleted(this, new checkTACCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkTAC1(string user, string pass, string dodebit, string aab301a) {
            this.Invoke("checkTAC1", new object[] {
                        user,
                        pass,
                        dodebit,
                        aab301a});
        }
        
        /// <remarks/>
        public void checkTAC1Async(string user, string pass, string dodebit, string aab301a) {
            this.checkTAC1Async(user, pass, dodebit, aab301a, null);
        }
        
        /// <remarks/>
        public void checkTAC1Async(string user, string pass, string dodebit, string aab301a, object userState) {
            if ((this.checkTAC1OperationCompleted == null)) {
                this.checkTAC1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckTAC1OperationCompleted);
            }
            this.InvokeAsync("checkTAC1", new object[] {
                        user,
                        pass,
                        dodebit,
                        aab301a}, this.checkTAC1OperationCompleted, userState);
        }
        
        private void OncheckTAC1OperationCompleted(object arg) {
            if ((this.checkTAC1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkTAC1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("setCardReturn")]
        public string setCard(string user, string pass, string server, string aaz500, string aac002, string aac003, string aae008, string aae010, string aae010b, string aab301) {
            object[] results = this.Invoke("setCard", new object[] {
                        user,
                        pass,
                        server,
                        aaz500,
                        aac002,
                        aac003,
                        aae008,
                        aae010,
                        aae010b,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setCardAsync(string user, string pass, string server, string aaz500, string aac002, string aac003, string aae008, string aae010, string aae010b, string aab301) {
            this.setCardAsync(user, pass, server, aaz500, aac002, aac003, aae008, aae010, aae010b, aab301, null);
        }
        
        /// <remarks/>
        public void setCardAsync(string user, string pass, string server, string aaz500, string aac002, string aac003, string aae008, string aae010, string aae010b, string aab301, object userState) {
            if ((this.setCardOperationCompleted == null)) {
                this.setCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCardOperationCompleted);
            }
            this.InvokeAsync("setCard", new object[] {
                        user,
                        pass,
                        server,
                        aaz500,
                        aac002,
                        aac003,
                        aae008,
                        aae010,
                        aae010b,
                        aab301}, this.setCardOperationCompleted, userState);
        }
        
        private void OnsetCardOperationCompleted(object arg) {
            if ((this.setCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCardCompleted(this, new setCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("setLossReturn")]
        public string setLoss(string user, string pass, string aaz500, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("setLoss", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setLossAsync(string user, string pass, string aaz500, string aac002, string aac003, string aab301) {
            this.setLossAsync(user, pass, aaz500, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void setLossAsync(string user, string pass, string aaz500, string aac002, string aac003, string aab301, object userState) {
            if ((this.setLossOperationCompleted == null)) {
                this.setLossOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLossOperationCompleted);
            }
            this.InvokeAsync("setLoss", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        aac003,
                        aab301}, this.setLossOperationCompleted, userState);
        }
        
        private void OnsetLossOperationCompleted(object arg) {
            if ((this.setLossCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLossCompleted(this, new setLossCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getLKSJReturn")]
        public string getLKSJ(string user, string pass, string batchno, string sldbm, string aab301) {
            object[] results = this.Invoke("getLKSJ", new object[] {
                        user,
                        pass,
                        batchno,
                        sldbm,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLKSJAsync(string user, string pass, string batchno, string sldbm, string aab301) {
            this.getLKSJAsync(user, pass, batchno, sldbm, aab301, null);
        }
        
        /// <remarks/>
        public void getLKSJAsync(string user, string pass, string batchno, string sldbm, string aab301, object userState) {
            if ((this.getLKSJOperationCompleted == null)) {
                this.getLKSJOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLKSJOperationCompleted);
            }
            this.InvokeAsync("getLKSJ", new object[] {
                        user,
                        pass,
                        batchno,
                        sldbm,
                        aab301}, this.getLKSJOperationCompleted, userState);
        }
        
        private void OngetLKSJOperationCompleted(object arg) {
            if ((this.getLKSJCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLKSJCompleted(this, new getLKSJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getZDZZReturn")]
        public string getZDZZ(string user, string pass, string aaz500, string aac002, string zt, string aab301) {
            object[] results = this.Invoke("getZDZZ", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        zt,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getZDZZAsync(string user, string pass, string aaz500, string aac002, string zt, string aab301) {
            this.getZDZZAsync(user, pass, aaz500, aac002, zt, aab301, null);
        }
        
        /// <remarks/>
        public void getZDZZAsync(string user, string pass, string aaz500, string aac002, string zt, string aab301, object userState) {
            if ((this.getZDZZOperationCompleted == null)) {
                this.getZDZZOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetZDZZOperationCompleted);
            }
            this.InvokeAsync("getZDZZ", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        zt,
                        aab301}, this.getZDZZOperationCompleted, userState);
        }
        
        private void OngetZDZZOperationCompleted(object arg) {
            if ((this.getZDZZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getZDZZCompleted(this, new getZDZZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("setCOPYReturn")]
        public string setCOPY(string user, string pass, string xml, string aab301) {
            object[] results = this.Invoke("setCOPY", new object[] {
                        user,
                        pass,
                        xml,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setCOPYAsync(string user, string pass, string xml, string aab301) {
            this.setCOPYAsync(user, pass, xml, aab301, null);
        }
        
        /// <remarks/>
        public void setCOPYAsync(string user, string pass, string xml, string aab301, object userState) {
            if ((this.setCOPYOperationCompleted == null)) {
                this.setCOPYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCOPYOperationCompleted);
            }
            this.InvokeAsync("setCOPY", new object[] {
                        user,
                        pass,
                        xml,
                        aab301}, this.setCOPYOperationCompleted, userState);
        }
        
        private void OnsetCOPYOperationCompleted(object arg) {
            if ((this.setCOPYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCOPYCompleted(this, new setCOPYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("setDSYKHReturn")]
        public string setDSYKH(string xml) {
            object[] results = this.Invoke("setDSYKH", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setDSYKHAsync(string xml) {
            this.setDSYKHAsync(xml, null);
        }
        
        /// <remarks/>
        public void setDSYKHAsync(string xml, object userState) {
            if ((this.setDSYKHOperationCompleted == null)) {
                this.setDSYKHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDSYKHOperationCompleted);
            }
            this.InvokeAsync("setDSYKH", new object[] {
                        xml}, this.setDSYKHOperationCompleted, userState);
        }
        
        private void OnsetDSYKHOperationCompleted(object arg) {
            if ((this.setDSYKHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDSYKHCompleted(this, new setDSYKHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("upPictureReturn")]
        public string upPicture(string id, string time, string time1, string sign, string img) {
            object[] results = this.Invoke("upPicture", new object[] {
                        id,
                        time,
                        time1,
                        sign,
                        img});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void upPictureAsync(string id, string time, string time1, string sign, string img) {
            this.upPictureAsync(id, time, time1, sign, img, null);
        }
        
        /// <remarks/>
        public void upPictureAsync(string id, string time, string time1, string sign, string img, object userState) {
            if ((this.upPictureOperationCompleted == null)) {
                this.upPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupPictureOperationCompleted);
            }
            this.InvokeAsync("upPicture", new object[] {
                        id,
                        time,
                        time1,
                        sign,
                        img}, this.upPictureOperationCompleted, userState);
        }
        
        private void OnupPictureOperationCompleted(object arg) {
            if ((this.upPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.upPictureCompleted(this, new upPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("allDsjkReturn")]
        public string allDsjk(string xml) {
            object[] results = this.Invoke("allDsjk", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void allDsjkAsync(string xml) {
            this.allDsjkAsync(xml, null);
        }
        
        /// <remarks/>
        public void allDsjkAsync(string xml, object userState) {
            if ((this.allDsjkOperationCompleted == null)) {
                this.allDsjkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnallDsjkOperationCompleted);
            }
            this.InvokeAsync("allDsjk", new object[] {
                        xml}, this.allDsjkOperationCompleted, userState);
        }
        
        private void OnallDsjkOperationCompleted(object arg) {
            if ((this.allDsjkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.allDsjkCompleted(this, new allDsjkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("onSendMessagReturn")]
        public string onSendMessag(string user, string pass, string bsMsg) {
            object[] results = this.Invoke("onSendMessag", new object[] {
                        user,
                        pass,
                        bsMsg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void onSendMessagAsync(string user, string pass, string bsMsg) {
            this.onSendMessagAsync(user, pass, bsMsg, null);
        }
        
        /// <remarks/>
        public void onSendMessagAsync(string user, string pass, string bsMsg, object userState) {
            if ((this.onSendMessagOperationCompleted == null)) {
                this.onSendMessagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnonSendMessagOperationCompleted);
            }
            this.InvokeAsync("onSendMessag", new object[] {
                        user,
                        pass,
                        bsMsg}, this.onSendMessagOperationCompleted, userState);
        }
        
        private void OnonSendMessagOperationCompleted(object arg) {
            if ((this.onSendMessagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.onSendMessagCompleted(this, new onSendMessagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getCardInfoReturn")]
        public string getCardInfo() {
            object[] results = this.Invoke("getCardInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCardInfoAsync() {
            this.getCardInfoAsync(null);
        }
        
        /// <remarks/>
        public void getCardInfoAsync(object userState) {
            if ((this.getCardInfoOperationCompleted == null)) {
                this.getCardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardInfoOperationCompleted);
            }
            this.InvokeAsync("getCardInfo", new object[0], this.getCardInfoOperationCompleted, userState);
        }
        
        private void OngetCardInfoOperationCompleted(object arg) {
            if ((this.getCardInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardInfoCompleted(this, new getCardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getSockInfoReturn")]
        public string getSockInfo() {
            object[] results = this.Invoke("getSockInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSockInfoAsync() {
            this.getSockInfoAsync(null);
        }
        
        /// <remarks/>
        public void getSockInfoAsync(object userState) {
            if ((this.getSockInfoOperationCompleted == null)) {
                this.getSockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSockInfoOperationCompleted);
            }
            this.InvokeAsync("getSockInfo", new object[0], this.getSockInfoOperationCompleted, userState);
        }
        
        private void OngetSockInfoOperationCompleted(object arg) {
            if ((this.getSockInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSockInfoCompleted(this, new getSockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("deleteReturn")]
        public string delete(string xml) {
            object[] results = this.Invoke("delete", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(string xml) {
            this.deleteAsync(xml, null);
        }
        
        /// <remarks/>
        public void deleteAsync(string xml, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        xml}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("insertReturn")]
        public string insert(string xml) {
            object[] results = this.Invoke("insert", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void insertAsync(string xml) {
            this.insertAsync(xml, null);
        }
        
        /// <remarks/>
        public void insertAsync(string xml, object userState) {
            if ((this.insertOperationCompleted == null)) {
                this.insertOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertOperationCompleted);
            }
            this.InvokeAsync("insert", new object[] {
                        xml}, this.insertOperationCompleted, userState);
        }
        
        private void OninsertOperationCompleted(object arg) {
            if ((this.insertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertCompleted(this, new insertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("getDataReturn")]
        public string getData(string user, string pass, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("getData", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDataAsync(string user, string pass, string aac002, string aac003, string aab301) {
            this.getDataAsync(user, pass, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void getDataAsync(string user, string pass, string aac002, string aac003, string aab301, object userState) {
            if ((this.getDataOperationCompleted == null)) {
                this.getDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataOperationCompleted);
            }
            this.InvokeAsync("getData", new object[] {
                        user,
                        pass,
                        aac002,
                        aac003,
                        aab301}, this.getDataOperationCompleted, userState);
        }
        
        private void OngetDataOperationCompleted(object arg) {
            if ((this.getDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataCompleted(this, new getDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://server.wei.com", ResponseNamespace="http://server.wei.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("setStartReturn")]
        public string setStart(string user, string pass, string aaz500, string aac002, string aac003, string aab301) {
            object[] results = this.Invoke("setStart", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        aac003,
                        aab301});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setStartAsync(string user, string pass, string aaz500, string aac002, string aac003, string aab301) {
            this.setStartAsync(user, pass, aaz500, aac002, aac003, aab301, null);
        }
        
        /// <remarks/>
        public void setStartAsync(string user, string pass, string aaz500, string aac002, string aac003, string aab301, object userState) {
            if ((this.setStartOperationCompleted == null)) {
                this.setStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetStartOperationCompleted);
            }
            this.InvokeAsync("setStart", new object[] {
                        user,
                        pass,
                        aaz500,
                        aac002,
                        aac003,
                        aab301}, this.setStartOperationCompleted, userState);
        }
        
        private void OnsetStartOperationCompleted(object arg) {
            if ((this.setStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setStartCompleted(this, new setStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCardCompletedEventHandler(object sender, getCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getBankCompletedEventHandler(object sender, getBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getBankSCompletedEventHandler(object sender, getBankSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAZ03CompletedEventHandler(object sender, getAZ03CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAZ03CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAZ03CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAZ03ACompletedEventHandler(object sender, getAZ03ACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAZ03ACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAZ03ACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAZ03BHCompletedEventHandler(object sender, getAZ03BHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAZ03BHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAZ03BHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAC01CompletedEventHandler(object sender, getAC01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAC01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAC01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void readCardCompletedEventHandler(object sender, readCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal readCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void checkTACCompletedEventHandler(object sender, checkTACCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkTACCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkTACCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void checkTAC1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void setCardCompletedEventHandler(object sender, setCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void setLossCompletedEventHandler(object sender, setLossCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setLossCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setLossCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getLKSJCompletedEventHandler(object sender, getLKSJCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLKSJCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLKSJCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getZDZZCompletedEventHandler(object sender, getZDZZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getZDZZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getZDZZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void setCOPYCompletedEventHandler(object sender, setCOPYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCOPYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCOPYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void setDSYKHCompletedEventHandler(object sender, setDSYKHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDSYKHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDSYKHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void upPictureCompletedEventHandler(object sender, upPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class upPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal upPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void allDsjkCompletedEventHandler(object sender, allDsjkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class allDsjkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal allDsjkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void onSendMessagCompletedEventHandler(object sender, onSendMessagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class onSendMessagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal onSendMessagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCardInfoCompletedEventHandler(object sender, getCardInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getSockInfoCompletedEventHandler(object sender, getSockInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void insertCompletedEventHandler(object sender, insertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getDataCompletedEventHandler(object sender, getDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void setStartCompletedEventHandler(object sender, setStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591